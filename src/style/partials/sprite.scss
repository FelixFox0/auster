// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-bot-name: 'arrow-bot';
$arrow-bot-x: 81px;
$arrow-bot-y: 57px;
$arrow-bot-offset-x: -81px;
$arrow-bot-offset-y: -57px;
$arrow-bot-width: 10px;
$arrow-bot-height: 5px;
$arrow-bot-total-width: 113px;
$arrow-bot-total-height: 109px;
$arrow-bot-image: '/image/sprite.png';
$arrow-bot: (81px, 57px, -81px, -57px, 10px, 5px, 113px, 109px, '/image/sprite.png', 'arrow-bot', );
$arrow-left-name: 'arrow-left';
$arrow-left-x: 76px;
$arrow-left-y: 86px;
$arrow-left-offset-x: -76px;
$arrow-left-offset-y: -86px;
$arrow-left-width: 14px;
$arrow-left-height: 19px;
$arrow-left-total-width: 113px;
$arrow-left-total-height: 109px;
$arrow-left-image: '/image/sprite.png';
$arrow-left: (76px, 86px, -76px, -86px, 14px, 19px, 113px, 109px, '/image/sprite.png', 'arrow-left', );
$arrow-right-name: 'arrow-right';
$arrow-right-x: 90px;
$arrow-right-y: 86px;
$arrow-right-offset-x: -90px;
$arrow-right-offset-y: -86px;
$arrow-right-width: 14px;
$arrow-right-height: 19px;
$arrow-right-total-width: 113px;
$arrow-right-total-height: 109px;
$arrow-right-image: '/image/sprite.png';
$arrow-right: (90px, 86px, -90px, -86px, 14px, 19px, 113px, 109px, '/image/sprite.png', 'arrow-right', );
$back-arrow-name: 'back-arrow';
$back-arrow-x: 81px;
$back-arrow-y: 32px;
$back-arrow-offset-x: -81px;
$back-arrow-offset-y: -32px;
$back-arrow-width: 26px;
$back-arrow-height: 22px;
$back-arrow-total-width: 113px;
$back-arrow-total-height: 109px;
$back-arrow-image: '/image/sprite.png';
$back-arrow: (81px, 32px, -81px, -32px, 26px, 22px, 113px, 109px, '/image/sprite.png', 'back-arrow', );
$bage-name: 'bage';
$bage-x: 23px;
$bage-y: 57px;
$bage-offset-x: -23px;
$bage-offset-y: -57px;
$bage-width: 22px;
$bage-height: 22px;
$bage-total-width: 113px;
$bage-total-height: 109px;
$bage-image: '/image/sprite.png';
$bage: (23px, 57px, -23px, -57px, 22px, 22px, 113px, 109px, '/image/sprite.png', 'bage', );
$cart-name: 'cart';
$cart-x: 81px;
$cart-y: 0px;
$cart-offset-x: -81px;
$cart-offset-y: 0px;
$cart-width: 32px;
$cart-height: 32px;
$cart-total-width: 113px;
$cart-total-height: 109px;
$cart-image: '/image/sprite.png';
$cart: (81px, 0px, -81px, 0px, 32px, 32px, 113px, 109px, '/image/sprite.png', 'cart', );
$cart2-name: 'cart2';
$cart2-x: 18px;
$cart2-y: 86px;
$cart2-offset-x: -18px;
$cart2-offset-y: -86px;
$cart2-width: 20px;
$cart2-height: 20px;
$cart2-total-width: 113px;
$cart2-total-height: 109px;
$cart2-image: '/image/sprite.png';
$cart2: (18px, 86px, -18px, -86px, 20px, 20px, 113px, 109px, '/image/sprite.png', 'cart2', );
$eye-name: 'eye';
$eye-x: 0px;
$eye-y: 0px;
$eye-offset-x: 0px;
$eye-offset-y: 0px;
$eye-width: 81px;
$eye-height: 57px;
$eye-total-width: 113px;
$eye-total-height: 109px;
$eye-image: '/image/sprite.png';
$eye: (0px, 0px, 0px, 0px, 81px, 57px, 113px, 109px, '/image/sprite.png', 'eye', );
$location-name: 'location';
$location-x: 0px;
$location-y: 57px;
$location-offset-x: 0px;
$location-offset-y: -57px;
$location-width: 23px;
$location-height: 29px;
$location-total-width: 113px;
$location-total-height: 109px;
$location-image: '/image/sprite.png';
$location: (0px, 57px, 0px, -57px, 23px, 29px, 113px, 109px, '/image/sprite.png', 'location', );
$location2-name: 'location2';
$location2-x: 0px;
$location2-y: 86px;
$location2-offset-x: 0px;
$location2-offset-y: -86px;
$location2-width: 18px;
$location2-height: 23px;
$location2-total-width: 113px;
$location2-total-height: 109px;
$location2-image: '/image/sprite.png';
$location2: (0px, 86px, 0px, -86px, 18px, 23px, 113px, 109px, '/image/sprite.png', 'location2', );
$mail-name: 'mail';
$mail-x: 45px;
$mail-y: 57px;
$mail-offset-x: -45px;
$mail-offset-y: -57px;
$mail-width: 23px;
$mail-height: 18px;
$mail-total-width: 113px;
$mail-total-height: 109px;
$mail-image: '/image/sprite.png';
$mail: (45px, 57px, -45px, -57px, 23px, 18px, 113px, 109px, '/image/sprite.png', 'mail', );
$man-name: 'man';
$man-x: 68px;
$man-y: 57px;
$man-offset-x: -68px;
$man-offset-y: -57px;
$man-width: 13px;
$man-height: 17px;
$man-total-width: 113px;
$man-total-height: 109px;
$man-image: '/image/sprite.png';
$man: (68px, 57px, -68px, -57px, 13px, 17px, 113px, 109px, '/image/sprite.png', 'man', );
$phone-name: 'phone';
$phone-x: 38px;
$phone-y: 86px;
$phone-offset-x: -38px;
$phone-offset-y: -86px;
$phone-width: 19px;
$phone-height: 19px;
$phone-total-width: 113px;
$phone-total-height: 109px;
$phone-image: '/image/sprite.png';
$phone: (38px, 86px, -38px, -86px, 19px, 19px, 113px, 109px, '/image/sprite.png', 'phone', );
$send-name: 'send';
$send-x: 57px;
$send-y: 86px;
$send-offset-x: -57px;
$send-offset-y: -86px;
$send-width: 19px;
$send-height: 19px;
$send-total-width: 113px;
$send-total-height: 109px;
$send-image: '/image/sprite.png';
$send: (57px, 86px, -57px, -86px, 19px, 19px, 113px, 109px, '/image/sprite.png', 'send', );
$spritesheet-width: 113px;
$spritesheet-height: 109px;
$spritesheet-image: '/image/sprite.png';
$spritesheet-sprites: ($arrow-bot, $arrow-left, $arrow-right, $back-arrow, $bage, $cart, $cart2, $eye, $location, $location2, $mail, $man, $phone, $send, );
$spritesheet: (113px, 109px, '/image/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
